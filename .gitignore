import cv2
import numpy as np

video_capture = cv2.VideoCapture(0)  # Change the argument to a video file path if needed

threshold = 40
threshold1 = 50  # Adjust the threshold values as needed
threshold2 = 150
max_value = 200

while True:
    ret, frame = video_capture.read()

    # Perform obstacle detection on each frame

    # Display the processed frame
    cv2.imshow('Obstacle Detection', frame)

    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)

    edges = cv2.Canny(blurred, threshold1, threshold2)  # Adjust the threshold values as needed

    ret, thresholded = cv2.threshold(edges, threshold, max_value, cv2.THRESH_BINARY)  # Adjust the threshold and max_value as needed

    # Perform any additional processing on the thresholded image, such as morphological operations or contour detection

    contours, _ = cv2.findContours(thresholded, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    for contour in contours:
        # Filter the contours based on area, aspect ratio, or other criteria
        area = cv2.contourArea(contour)
        if area > 100:  # Adjust the minimum area threshold as needed
            x, y, w, h = cv2.boundingRect(contour)
            cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

    cv2.imshow('Obstacle Detection', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

video_capture.release()
cv2.destroyAllWindows()
